<Application x:Class="EmployeeDirectoryUsingMVVM.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:EmployeeDirectoryUsingMVVM"
             xmlns:vm="clr-namespace:EmployeeDirectoryUsingMVVM.ViewModels"
             xmlns:vw="clr-namespace:EmployeeDirectoryUsingMVVM.Views"
             xmlns:Model="clr-namespace:EmployeeDirectoryUsingMVVM.Models;assembly=EmployeeDirectoryUsingMVVM.Models"
             >
    <Application.Resources>

        <DataTemplate DataType="{x:Type vm:EmployeeDetailsViewModel }">
            <vw:EmployeeDetails />
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:EmployeeFormViewModel }">
            <vw:EmployeeForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:EmployeesListViewModel }" >
            <vw:EmployeesList />
        </DataTemplate>

        <local:TextColorConverter x:Key="TextColorConverter"/>
        <local:DateToAgeConverter x:Key="DateToAgeConverter"/>
        <local:TextConverter x:Key="TextConverter"/>
        <local:ColorConverter x:Key="ColorConverter"/>
        <local:DateConverter x:Key="DateConverter"/>
        <local:ImageConverter x:Key="ImageConverter"/>
        <local:VisibilityConverter x:Key="VisibilityConverter"/>
        <local:EnumToRadioButtonConverter x:Key="EnumToRadioButtonConverter"/>
        <local:ButtonBackgroundConverter x:Key="ButtonBackgroundConverter"/>
        <ObjectDataProvider x:Key="TeamsSource" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Model:TeamName"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>       
        <FontFamily x:Key="FontAwesome">/Fonts/fontawesome-webfont.ttf#FontAwesome</FontFamily>
        <Style TargetType="{x:Type Grid}" x:Key="Header">
            <Setter Property="Background" Value="#33414b"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="PopupTextBlockMargin">
            <Setter Property="Margin" Value="10,0,0,0"/>
        </Style>
        <Style TargetType="{x:Type Run}" x:Key="ErrorBaseStyle">
            <Setter Property="Foreground" Value="red"/>
        </Style>

        <Style TargetType="{x:Type Run}" x:Key="Error" BasedOn="{StaticResource ErrorBaseStyle}">
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="red"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <SolidColorBrush x:Key="SideBarButtonBackgroundOnActive" Color="#29364C"/>

        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style TargetType="{x:Type fa:FontAwesome}" x:Key="SideBarIcons">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Margin" Value="6,0"/>
            <Setter Property="Width" Value="30"/>
        </Style>

        <Style TargetType="RowDefinition" x:Key="PopupRowDefinition">
            <Setter Property="Height" Value="auto"/>
        </Style>

        <Style TargetType="TextBox" x:Key="TextBoxBaseStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true" />
                                    <Condition Property="IsFocused" Value="true" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#33414b"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListBox}">
            <Setter Property="BorderBrush" Value="#686868"/>
            <Setter Property="Background" Value="#EFEFEF"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <!--<Style.Triggers>
                <DataTrigger Binding="{Binding Path=Items.Count,RelativeSource={RelativeSource Self}}"  Value="0">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border Padding="10" Margin="10">
                                    <TextBlock Background="#EFEFEF" Height="40" HorizontalAlignment="Stretch" FontSize="16" VerticalAlignment="Top" Padding="0,10" TextAlignment="Center">No items found</TextBlock>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>-->
        </Style>

        <DataTemplate x:Key="ListBoxDataTemplate">
            <DataTemplate.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="Padding" Value="14,0,10,0"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
            </DataTemplate.Resources>

            <Grid Background="White" Width="400" Height="100">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock  Height="100" Width="100" FontSize="30"  Padding="30" Foreground="White" Background="{Binding Converter = {StaticResource ColorConverter}}"  Grid.RowSpan="4">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource TextConverter}" >
                            <Binding Path="LastName"/>
                            <Binding Path="FirstName"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>

                <Image Grid.RowSpan="4" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Fill" Source="{Binding Image}"/>
                <TextBlock  VerticalAlignment="Bottom" TextTrimming="CharacterEllipsis" Grid.Column="1" FontSize="20">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} {1}">
                            <Binding Path="LastName"/>
                            <Binding Path="FirstName"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>

                <TextBlock Text="{Binding Email}"  Grid.Column="1" Grid.Row="1"/>
                <TextBlock Text="{Binding Department.Name}" Grid.Column="1" Grid.Row="2"/>
                <TextBlock Grid.Column="1" Grid.Row="3" HorizontalAlignment="Right" FontSize="14" Text="{Binding JoiningDate,Converter={StaticResource DateToAgeConverter},StringFormat={}Experience: {0} Years}"/>
            </Grid>
        </DataTemplate>

        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="ColumnHeaderHeight" Value="40"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="RowHeight" Value="40"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="AlternatingRowBackground" Value="#EFEFEF"/>
            <!--<Style.Triggers>
                <DataTrigger Binding="{Binding Path=Items.Count,RelativeSource={RelativeSource Self}}"  Value="0">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border Padding="10" Margin="0,10,10,10">
                                    <TextBlock Background="#EFEFEF" Height="40" HorizontalAlignment="Stretch" FontSize="16" VerticalAlignment="Top" Padding="0,10" TextAlignment="Center">No items found</TextBlock>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="HeadersVisibility" Value="All"/>
                </DataTrigger>
            </Style.Triggers>-->
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="SibeBarTextBlock">
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="Width" Value="90"/>
        </Style>

        <Style TargetType="{x:Type StackPanel}" x:Key="SearchBox">
            <Setter Property="Width" Value="200"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
        </Style>

        <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0" Padding="2,0">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="4,0"/>
            <Setter Property="Background" Value="#c1c5cc"/>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="SideBarButton">
            <Setter Property="Background" Value="#33414b"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Height" Value="52"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#29364c"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border BorderThickness="0" Margin="20" Background="{TemplateBinding Background}" >
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="PopupTextBlock">
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Margin" Value="5,0"/>
        </Style>

        <Style TargetType="{x:Type Label}" x:Key="PopupLabel">
            <Setter Property="VerticalAlignment" Value="top"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Margin" Value="14,0"/>
            <Setter Property="FontWeight" Value="Medium"/>
        </Style>

        <Style TargetType="Button" x:Key="ButtonBaseStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#293955">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <Style TargetType="Button" x:Key="EmployeeDetailsPopupButton" BasedOn="{StaticResource ButtonBaseStyle}">
            <Setter Property="Width" Value="180"/>
            <Setter Property="Margin" Value="5,5,5,0"/>
            <Setter Property="Height" Value="34"/>
            <Setter Property="FontSize" Value="14"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#33414b"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="FormTextBox" BasedOn="{StaticResource TextBoxBaseStyle}">
            <Setter Property="Height" Value="34"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="#33414b"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="FormTextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="0,5"/>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="FormButton" BasedOn="{StaticResource ButtonBaseStyle}">
            <Setter Property="Background" Value="#334148"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="110"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#334148"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Border}" x:Key="EmployeeDetailsFormBorder">
            <Setter Property="Width" Value="690"/>
            <Setter Property="Height" Value="650"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="White"/>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="CancelButton" BasedOn="{StaticResource ButtonBaseStyle}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontFamily" Value="Omnes Medium"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DatePicker}" x:Key="FormDatePicker">
            <Setter Property="Height" Value="34"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#33414b"/>
            <Setter Property="IsEnabled" Value="True"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Text" Value="null"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="Padding" Value="0,0,0,2"/>
            <Setter Property="Focusable" Value="False"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type StackPanel}" x:Key="SideBarPanel">
            <Setter Property="Background" Value="#33414b"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
    </Application.Resources>
</Application>
